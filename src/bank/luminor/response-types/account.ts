/* tslint:disable */
// Generated by https://quicktype.io

export interface Account {
    Locale:      Locale;
    Status:      FluffyStatus;
    Ver:         string;
    ClientApp:   ClientApp;
    UIID:        Uiid;
    BussinessDt: BussinessDt;
    MsgId:       string;
    TimeStamp:   TimeStamp;
    SecToken:    SECToken;
    EnvVer:      string;
    XMsgId:      string;
    Payload:     Payload;
    SessionId:   string;
    FiId:        ID;
}

export interface BussinessDt {
    Month: number;
    Ver:   string;
    Year:  number;
    Day:   number;
}

export interface ClientApp {
    ApGrpId:  ID;
    TrgtOS:   Locale;
    Ver:      string;
    ApId:     ID;
    ComptLst: ComptLst;
    Typ:      Locale;
    Nam:      string;
    CdngLng:  string;
}

export interface ID {
    Ver: string;
    Id:  string;
}

export interface ComptLst {
    Ver:        string;
    AppCompLst: AppCompLst[];
}

export interface AppCompLst {
    Ver:        string;
    AppCompVer: AppCompVer;
    Typ:        Locale;
}

export interface AppCompVer {
}

export interface Locale {
    CDE: string;
    DSC: string;
}

export interface Payload {
    Ver:          string;
    Category:     string[];
    EntityCounts: EntityCount[];
    DataEntity:   DataEntity[];
    Operation:    string;
}

export interface DataEntity {
    Account:  AccountClass;
    Ver:      string;
    Customer: Customer;
}

export interface AccountClass {
    Status:             PurpleStatus;
    PricingList:        any[];
    Ver:                string;
    AccountId:          AccountID;
    SubType:            string;
    BalanceList:        BalanceList[];
    Type:               Type;
    XAttributes:        XAttributes;
    Branch:             Branch;
    Currency:           Currency;
    IntrstRateDataList: IntrstRateDataList[];
    PeriodDataList:     PeriodDataList[];
}

export interface AccountID {
    Ver:        string;
    IorIdAvble: boolean;
    AcctIds:    AcctIDS;
    iorId:      string;
}

export interface AcctIDS {
    IBAN:          string;
    BANKACCOUNTID: string;
}

export interface BalanceList {
    Ver:      BalanceListVer;
    CurrAmt:  CurrAmt;
    BalType?: Locale;
}

export interface CurrAmt {
    Ver:      CurrAmtVer;
    Amt:      Amt;
    CurrCode: Type;
}

export interface Amt {
    Ver:   AmtVer;
    Value: string;
}

export enum AmtVer {
    Amount100 = "Amount_1.0.0",
}

export interface Type {
    DISP: Disp;
    CDE:  CDE;
    DSC:  Dsc;
    SYM?: Sym;
}

export enum CDE {
    Dep = "DEP",
    Eur = "EUR",
}

export enum Disp {
    Demanddepositaccount = "DEMANDDEPOSITACCOUNT",
    Empty = "",
}

export enum Dsc {
    Demanddepositaccount = "DEMANDDEPOSITACCOUNT",
    Euro = "Euro",
}

export enum Sym {
    Empty = "â‚¬",
}

export enum CurrAmtVer {
    CurrencyAmount100 = "CurrencyAmount_1.0.0",
}

export enum BalanceListVer {
    AccountBalance100 = "AccountBalance_1.0.0",
}

export interface Branch {
    Ver:     string;
    FiIdent: BranchFiIdent;
}

export interface BranchFiIdent {
    Ver:     string;
    FiIdent: FiIdentFiIdent;
}

export interface FiIdentFiIdent {
    SWIFT: string;
}

export interface Currency {
    Ver:  string;
    Code: Type;
}

export interface IntrstRateDataList {
    Ver:                string;
    CompoundIndicator:  boolean;
    RateMatrixTierList: RateMatrixTierList[];
    TierAmtType:        string;
}

export interface RateMatrixTierList {
    Ver:  string;
    Rate: string;
}

export interface PeriodDataList {
    Ver:               string;
    AccountAmountType: Locale;
    Amount:            CurrAmt;
    LastOccurInd:      boolean;
}

export interface PurpleStatus {
    Ver:        string;
    StatusCode: Locale;
}

export interface XAttributes {
    cardAccount: string;
}

export interface Customer {
    PoliticallyExposedPerson: PoliticallyExposedPerson;
    Ver:                      string;
    ResidncCountry:           Country;
    CustId:                   CustID;
    RefData:                  RefData;
}

export interface CustID {
    Ver:    string;
    CustId: AppCompVer;
}

export interface PoliticallyExposedPerson {
    Ver:              string;
    Country:          Country;
    AssociatedMember: AssociatedMember;
}

export interface AssociatedMember {
    Ver:           string;
    SelectionList: null;
}

export interface Country {
    Ver:        string;
    CountryLst: any[];
}

export interface RefData {
    Ver:         string;
    RefDataList: any[];
}

export interface EntityCount {
    Ver:          string;
    EntityTypeId: string;
    Count:        number;
}

export interface SECToken {
    Ver:   string;
    Token: Token[];
}

export interface Token {
    Ver:       string;
    Type:      Locale;
    Issuer:    string;
    Audience:  Audience[];
    IssuedOn:  Dttime;
    Signature: string;
    UsageCnt:  number;
    TokenId:   string;
    Expiry:    Dttime;
}

export interface Audience {
    Ver:   string;
    AppId: string;
}

export interface Dttime {
    Month:  number;
    Ver:    string;
    Year:   number;
    Minute: number;
    Second: number;
    Hour:   number;
    Day:    number;
}

export interface FluffyStatus {
    ServerStatusCd: string;
    Ver:            string;
    Severity:       Locale;
    Code:           number;
}

export interface TimeStamp {
    Ver:    string;
    Dttime: Dttime;
}

export interface Uiid {
    Ver:      string;
    Children: Children;
}

export interface Children {
    InstLst: any[];
    Ver:     string;
}
